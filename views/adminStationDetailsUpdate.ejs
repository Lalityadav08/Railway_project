<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Update Station Details</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="/sidebar/sidebar.css">
    <%- include("includes/sidebarCssLinks.ejs") %>
    <style>
        /* Form container styling for a clean, white background */
        .form-container {
            max-width: 800px;
            padding: 20px;
            margin: 40px auto;
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.15);
        }

        /* Flexbox layout for three fields per row */
        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 15px;
        }

        /* Field styling */
        .form-field {
            position: relative;
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        /* Floating label styling */
        .form-field label {
            position: absolute;
            top: 10px;
            left: 5px;
            font-size: 16px;
            color: #666;
            pointer-events: none;
            transition: 0.3s ease all;
        }

        /* Input styling with no box shape, only bottom border */
        .form-field input,
        .form-field select {
            border: none;
            border-bottom: 2px solid #ddd;
            padding: 8px 5px;
            background-color: transparent;
            transition: border-color 0.3s ease;
            outline: none;
            font-size: 16px;
        }

        /* When input is focused or contains text, move label up */
        .form-field input:focus + label,
        .form-field input:not(:placeholder-shown) + label,
        .form-field select:focus + label,
        .form-field select:not([value=""]) + label {
            top: -15px;
            font-size: 13px;
            color: #007bff;
        }

        /* Focus effect for inputs */
        .form-field input:focus,
        .form-field select:focus {
            border-bottom: 2px solid #007bff;
        }

        /* Button styling with a 3D effect */
        .btn-custom {
            padding: 10px 20px;
            border-radius: 8px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
            transition: transform 0.1s ease;
            font-weight: bold;
        }

        .btn-primary-custom {
            background-color: #007bff;
            color: #fff;
            border: none;
        }

        .btn-secondary-custom {
            background-color: #6c757d;
            color: #fff;
            border: none;
        }

        .btn-custom:hover {
            transform: translateY(-2px);
        }

        .btn-custom:active {
            transform: translateY(1px);
        }

        /* Centering the button */
        .button-row {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
        }
    </style>
</head>

<body>
    <%- include("includes/sidebar.ejs") %>
    <div class="page-content p-3" id="content">
        <div class="container" style="margin-left:-5px;">
            <button id="sidebarCollapse" type="button"
                class="btn btn-light bg-white rounded-pill shadow-sm px-4 mb-4">
                <i class="fa fa-bars mr-2"></i><small class="text-uppercase font-weight-bold">Toggle</small>
            </button>
            <div class="container form-container">
                <form id="updateForm">
                    <div class="form-row">
                        <div class="form-field">
                            <select id="stnCode" name="stnCode" required>
                                <option value="" disabled selected>Select Station </option>
                                <!-- Options will be populated dynamically -->
                                <% stationNames.forEach(station=> { %>
                                    <option value="<%= station %>">
                                        <%= station %>
                                    </option>
                                    <% }) %>
                            </select>
                            <label for="stnCode">STN Code</label>
                        </div>
                        <div class="form-field">
                            <input type="text" id="stationName" name="stationName" placeholder=" ">
                            <label for="stationName">Station Name</label>
                        </div>
                        <div class="form-field">
                            <input type="text" id="section" name="section" placeholder=" ">
                            <label for="section">Section</label>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-field">
                            <input type="text" id="route" name="route" placeholder=" ">
                            <label for="route">Route</label>
                        </div>
                        <div class="form-field">
                            <input type="text" id="si" name="si" placeholder=" ">
                            <label for="si">SI</label>
                        </div>
                        <div class="form-field">
                            <input type="text" id="csi" name="csi" placeholder=" ">
                            <label for="csi">CSI</label>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-field">
                            <input type="text" id="adste" name="adste" placeholder=" ">
                            <label for="adste">ADSTE</label>
                        </div>
                        <div class="form-field">
                            <input type="text" id="srDste" name="srDste" placeholder=" ">
                            <label for="srDste">SR DSTE</label>
                        </div>
                        <div class="form-field">
                            <input type="text" id="pwi" name="pwi" placeholder=" ">
                            <label for="pwi">PWI</label>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-field">
                            <input type="text" id="cpwi" name="cpwi" placeholder=" ">
                            <label for="cpwi">CPWI</label>
                        </div>
                        <div class="form-field">
                            <input type="text" id="aen" name="aen" placeholder=" ">
                            <label for="aen">AEN</label>
                        </div>
                        <div class="form-field">
                            <input type="text" id="srDen" name="srDen" placeholder=" ">
                            <label for="srDen">SR DEN</label>
                        </div>
                    </div>

                    <div class="button-row">
                        <button type="button" onclick="updateForm()" class="btn btn-custom btn-primary-custom">Update</button>
                        <button type="button" onclick="resetForm()" class="btn btn-custom btn-secondary-custom">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <%- include("includes/sidebarJsLinks.ejs") %>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap4.min.js"></script>
    <script src="/sidebar/sidebar.js"></script>
    <script>
        // Fetch data from backend when STN Code is selected
        document.getElementById('stnCode').addEventListener('change', function () {
            const stnCode = this.value;

            $.ajax({
                url: '/getStationDetails', // Replace with your actual API endpoint
                method: 'POST',
                data: { stnCode },
                success: function (response) {
                    // Mapping response data to form fields
                    const dataMapping = {
                        "STN_Name": "stationName",
                        "Section": "section",
                        "Route": "route",
                        "SI": "si",
                        "CSI": "csi",
                        "ADSTE": "adste",
                        "Sr_DSTE": "srDste",
                        "PWI": "pwi",
                        "CPWI": "cpwi",
                        "AEN": "aen",
                        "Sr_DEN": "srDen"
                    };

                    // Populate fields with response data using the mapping
                    Object.keys(dataMapping).forEach(key => {
                        const fieldId = dataMapping[key]; // Get the form field ID
                        const input = document.getElementById(fieldId);
                        if (input) {
                            input.value = response[key] || ''; // Use empty string if data is missing
                            input.dispatchEvent(new Event('input', { bubbles: true })); // Trigger input event to move label
                        }
                    });
                },
                error: function () {
                    alert('Error fetching station details.');
                }
            });
        });

        // Send data to backend on form submission
        function updateForm() {
            const formData = $('#updateForm').serialize();
           
            $.ajax({
                url: '/updateStation', // Replace with your actual API endpoint
                method: 'POST',
                data: formData,
                success: function () {
                    alert('Data updated successfully!');
                },
                error: function () {
                    alert('Error updating data.');
                }
            });
        }

        function resetForm() {
            document.getElementById("updateForm").reset(); // Resets all form fields to their default values

            // Trigger input events to reset the floating labels
            const inputs = document.querySelectorAll("#updateForm input, #updateForm select");
            inputs.forEach(input => {
                input.dispatchEvent(new Event('input', { bubbles: true }));
            });
        }

        
    </script>
</body>

</html>
